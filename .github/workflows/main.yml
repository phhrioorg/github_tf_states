name: TF_STATE
on:
  push:
    branches:
      - 'main'
      - 'test-build'

env:
    FILE: 'test'
    REPO_OWNER: '${{ github.repository_owner}}'
    REPOSITORY_NAME: '${{ github.ref_name }}'

permissions:
  id-token: write
  contents: read

jobs:
  
  Initialise_development_state_file_repoository:
    runs-on: [self-hosted, linux, X64]                  # was   runs-on: ubuntu-latest  
    environment:
      name: development

    steps:
      - name: Git clone the repository
        uses: actions/checkout@master
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sts GetCallerIdentity
        run: |
          echo $GITHUB_VAR
          env
          echo "CHECK ENV VARIABLES ${{ vars.GITHUB_VAR }}"
          aws sts get-caller-identity
          aws s3 ls
          echo "Checking for file at s3://${{ vars.REPO_OWNER }}/${{ vars.REPOSITORY_NAME }}"
          # Execute a head-object command
          aws s3api head-object --bucket ${{ github.repository_owner }} --key ${{ github.ref_type }}
#          # XXX: we are just checking the error code, but should check the result for a 404, and raise error in other cases
#          if [ $? == 0 ]
#          then
#            echo "::set-output name=exists::true"
#          else
#            echo "::set-output name=exists::false"
#          fi


#      - uses: hashicorp/setup-terraform@v3.0.0
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: |
          echo "Terraform Init TEST-BUILD"...
          echo "GITHUB_REF               ${{ github.ref }}"...               # refs/heads/[<BRANCH> | test-build | main]
          echo "GITHUB_BASE_REF          ${{ github.base_ref }}"...          # 
          echo "GITHUB_REF_NAME          ${{ github.ref_name }}"...          # <BRANCH> | test-build | main
          echo "GITHUB_REF_TYPE          ${{ github.ref_type }}"...          # branch | test-build | ""
          echo "GITHUB_WORKSPACE         ${{ github.workspace }}"...         # /home/paul/actions-runner/_work/github_tf_states/github_tf_states
          echo "GITHUB_ACTION_REPOSITORY ${{ github.action_repository }}"... # 
          echo "GITHUB_HEAD_REF          ${{ github.head_ref }}"...          # 
          echo "GITHUB_REPOSITORY        ${{ github.repository }}"...        # phhrioorg/github_tf_states
          echo "GITHUB_REPOSITORY_OWNER  ${{ github.repository_owner}}"...   # phhrioorg
          
          terraform init

      - name: Terraform Validate
        run: |
          echo "Terraform Validate"...
          terraform validate

      - name: Terraform Format
        run: |
          echo "Terraform Format"...
          terraform fmt

      - name: Terraform Plan
        run: |
          echo "Terraform Plan"...
          terraform plan
