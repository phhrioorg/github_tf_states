name: TF_STATE
on:
  push:
    branches:
      - 'main'
      - 'test-build'

env:
    FILE: 'test'
    REPOSITORY_OWNER: '${{ github.repository_owner}}' 
    BRANCH_NAME:      '${{ github.ref_name }}'
    BUCKET:           '${{ vars.TF_STATES_BUCKET }}'
    STATE_FILE:       '${{ vars.TF_STATES_FILE}}'
    STATE_FILE_STATE:  0

permissions:
  id-token: write
  contents: read

jobs:
  
  Initialise_state_file_repoository:
    runs-on: [self-hosted, linux, X64]                  # was   runs-on: ubuntu-latest  
    environment:
      name: development

    steps:
      - name: Git clone the repository
        uses: actions/checkout@master
        
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check Terraform State file
        run: |
          aws sts get-caller-identity
          echo "Checking for file at s3://${{ vars.TF_STATES_BUCKET }}/${{ vars.TF_STATES_FILE}}"
          set -e
          aws s3api head-object --bucket $BUCKET --key $STATE_FILE  && STATE_FILE_EXISTS=$? || STATE_FILE_EXISTS=$?
          if [ ${{ env.STATE_FILE_STATE }} == 0 ]
          then
            echo "STATE FILE EXISTS"
          else
            echo "STATE FILE DOESN'T EXIST"
          fi
          
#      - uses: hashicorp/setup-terraform@v3.0.0
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        if: ${{ env.STATE_FILE_STATE == 0 }}
        run: |
          echo "Terraform State File does NOT exist yet"...       
          cd init_states
          terraform init
          pwd

      - name: Terraform Plan
        if: ${{ env.STATE_FILE_STATE == 0 }}
        run: |
          pwd
          echo "Terraform State File does NOT exist yet"...       
          cd init_states
          terraform plan -var="state_bucket_prefix=$BUCKET" --var="dynamodb_table_name=$BUCKET"

      - name: Terraform Validate
        run: |
          echo "Terraform Validate"...
          cd init_states
          terraform validate

      - name: Terraform Format
        run: |
          echo "Terraform Format"...
          cd init_states
          terraform fmt

      - name: Terraform Plan
        run: |
          echo "Terraform Plan"...
          cd init_states
          terraform plan
